name: Bootstrap Apply

on:
  workflow_run:
    workflows: ["Bootstrap Plan"]      # nombre EXACTO del workflow de plan
    types: [completed]
    branches: [main]

permissions:
  id-token: write
  contents: read
  actions: read

concurrency:
  group: bootstrap-apply
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./Bootstrap

jobs:
  detect:
    # solo si el plan terminó OK
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    outputs:
      has_tfplan: ${{ steps.find.outputs.has_tfplan }}
      plan_run_id: ${{ github.event.workflow_run.id }}
    steps:
      - uses: actions/checkout@v4

      - name: Find tfplan artifact
        id: find
        uses: actions/github-script@v7
        with:
          script: |
            const run_id = ${{ github.event.workflow_run.id }};
            const { data } = await github.rest.actions.listWorkflowRunArtifacts({
              owner: context.repo.owner,
              repo:  context.repo.repo,
              run_id
            });
            const a = data.artifacts.find(x => x.name === 'tfplan' && !x.expired);
            core.setOutput('has_tfplan', a ? 'true' : 'false');

  apply:
    needs: detect
    if: ${{ needs.detect.outputs.has_tfplan == 'true' }}
    runs-on: ubuntu-latest
    environment: bootstrap         # <— aprobación aquí, a nivel de job
    steps:
      - uses: actions/checkout@v4

      - name: Auth via WIF
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ secrets.WIF_PROVIDER }}
          service_account:           ${{ secrets.TF_SA_EMAIL }}

      - uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.8.5

      - name: Terraform init
        run: terraform init -input=false

      - name: Download tfplan from Plan run
        uses: actions/download-artifact@v4
        with:
          name: tfplan
          path: Bootstrap
          run-id: ${{ needs.detect.outputs.plan_run_id }}

      - name: Check for destroy actions
        run: |
          terraform show -no-color tfplan | grep -q '^- ' && {
            echo "ERROR: Plan includes destroy, refusing to auto-apply"
            exit 1
          } || echo "No destroy detected"

      - name: Terraform apply
        run: terraform apply -input=false -lock-timeout=3m -auto-approve tfplan

